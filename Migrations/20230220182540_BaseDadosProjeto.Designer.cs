// <auto-generated />
using System;
using EntityFramework.Servicos.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFramework.Migrations
{
    [DbContext(typeof(DbContexto))]
    [Migration("20230220182540_BaseDadosProjeto")]
    partial class BaseDadosProjeto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EntityFramework.Models.ClienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int")
                        .HasColumnName("enderecoIdFk");

                    b.Property<int?>("EnderecoIdNome")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text")
                        .HasColumnName("observacoes");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoIdNome");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EntityFramework.Models.EnderecoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("bairro");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("complemento");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("numero");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("EntityFramework.Models.PedidoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("clienteIdFk");

                    b.Property<int?>("ClienteIdNome")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int")
                        .HasColumnName("enderecoIdFk");

                    b.Property<int?>("EnderecoIdNome")
                        .HasColumnType("int");

                    b.Property<double?>("ValorTotal")
                        .IsRequired()
                        .HasColumnType("double")
                        .HasColumnName("valorTotal");

                    b.HasKey("Id");

                    b.HasIndex("ClienteIdNome");

                    b.HasIndex("EnderecoIdNome");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("EntityFramework.Models.PedidosProdutosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoIdFk");

                    b.Property<int?>("PedidoIdNome")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produtoIdFk");

                    b.Property<int?>("ProdutoIdNome")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadePEdidoProd")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("QuantidadePedidoProd");

                    b.Property<double?>("ValorPEdidoProd")
                        .IsRequired()
                        .HasColumnType("double")
                        .HasColumnName("valorPedidoProd");

                    b.HasKey("Id");

                    b.HasIndex("PedidoIdNome");

                    b.HasIndex("ProdutoIdNome");

                    b.ToTable("PedidosProdutos");
                });

            modelBuilder.Entity("EntityFramework.Models.ProdutoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<string>("UrlImagem")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url_imagem");

                    b.Property<double?>("Valor")
                        .HasColumnType("double")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("EntityFramework.Models.ClienteModel", b =>
                {
                    b.HasOne("EntityFramework.Models.EnderecoModel", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoIdNome");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("EntityFramework.Models.PedidoModel", b =>
                {
                    b.HasOne("EntityFramework.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteIdNome");

                    b.HasOne("EntityFramework.Models.EnderecoModel", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoIdNome");

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("EntityFramework.Models.PedidosProdutosModel", b =>
                {
                    b.HasOne("EntityFramework.Models.PedidoModel", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoIdNome");

                    b.HasOne("EntityFramework.Models.ProdutoModel", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoIdNome");

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
